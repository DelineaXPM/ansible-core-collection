---
name: test-unit
on:
  # Run CI against all pushes (direct commits, also merged PRs), Pull Requests
  push:
    branches:
      - main
      - stable-*
  pull_request:
  # Run CI once per day (at 06:00 UTC)
  # This ensures that even if there haven't been commits that we are still testing against latest version of ansible-test for each ansible-base version
  # schedule:
  #   - cron: '0 6 * * *'
  workflow_dispatch:

env:
  NAMESPACE: delinea
  COLLECTION_NAME: core
  PYTHON_VERSION: 3.10
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  unit:
    runs-on: ubuntu-latest
    name: unit-${{ matrix.ansible }}
    timeout-minutes: 15
    strategy:
      # As soon as the first unit test fails, cancel the others to free up the CI queue
      fail-fast: true
      matrix:
        ansible:
          # - stable-2.9 # Only if your collection supports Ansible 2.9
          - stable-2.10
          - stable-2.11
          - stable-2.12
          - stable-2.13
          - devel

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          path: ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          # it is just required to run that once as "ansible-test units" in the docker image
          # will run on all python versions it supports.
          python-version: "3.10"

      - name: Install ansible-base (${{ matrix.ansible }})
        run: pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible }}.tar.gz --disable-pip-version-check

      # OPTIONAL If your unit test requires Python libraries from other collections
      # Install them like this
      - name: Install collection dependencies
        run: ansible-galaxy collection install ansible.netcommon ansible.utils -p .

      # Run the unit tests
      - name: Run unit test
        run: ansible-test units -v --color --docker --coverage ./plugins
        working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

      # ansible-test support producing code coverage date
      - name: Generate coverage report
        run: ansible-test coverage xml -v --requirements --group-by command --group-by version ./plugins
        working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

      - uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false
