---
name: test-sanity
on:
  # Run CI against all pushes (direct commits, also merged PRs), Pull Requests
  push:
    branches:
      - main
      - stable-*
  pull_request:
  # Run CI once per day (at 06:00 UTC)
  # This ensures that even if there haven't been commits that we are still testing against latest version of ansible-test for each ansible-base version
  # schedule:
  #   - cron: '0 6 * * *'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NAMESPACE: delinea
  COLLECTION_NAME: core
  PYTHON_VERSION: 3.10.6

jobs:
  sanity:
    name: sanity-ansible-${{ matrix.ansible }}
    timeout-minutes: 15
    strategy:
      matrix:
        ansible:
          # It's important that Sanity is tested against all stable-X.Y branches
          # Testing against `devel` may fail as new tests are added.
          # - stable-2.9 # Only if your collection supports Ansible 2.9
          - stable-2.10
          - stable-2.11
          - stable-2.12
          - stable-2.13
          - devel
    runs-on: ubuntu-latest
    steps:
      # ansible-test requires the collection to be in a directory in the form
      # .../ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}/

      # https://github.com/magnetikonline/action-golang-cache

      # - name: Setup Golang with cache
      #   uses: magnetikonline/action-golang-cache@v3
      #   with:
      #     go-version-file: go.mod

      # - name: Set up Python
      #   uses: actions/setup-python@v3
      #   with:
      #     # it is just required to run that once as "ansible-test sanity" in the docker image
      #     # will run on all python versions it supports.
      #     python-version: ${{ env.PYTHON_VERSION }}

      # - name: install-ansible-base
      #   uses: magefile/mage-action@v2
      #   with:
      #     version: latest
      #     args: ansible:installbase ${{ matrix.ansible }}

      # - name: run-sanity-tests
      #   uses: magefile/mage-action@v2
      #   with:
      #     version: latest
      #     args: ansible:test ${{ matrix.ansible }}

      - name: Check out code
        uses: actions/checkout@v3
        with:
          path: ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          # it is just required to run that once as "ansible-test sanity" in the docker image
          # will run on all python versions it supports.
          python-version: ${{ env.PYTHON_VERSION }}

      # Install the head of the given branch (devel, stable-2.10)
      - name: Install ansible-base (${{ matrix.ansible }})
        run: python3 -m pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible }}.tar.gz --disable-pip-version-check --user

      # run ansible-test sanity inside of Docker.
      # The docker container has all the pinned dependencies that are required
      # and all python versions ansible supports.
      - name: Run sanity tests
        run: ansible-test sanity --docker -v --color --coverage --skip-test 'symlinks' --skip-test 'shebang'
        working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

      # ansible-test support producing code coverage date
      - name: Generate coverage report
        run: ansible-test coverage xml -v --requirements --group-by command --group-by version
        working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

      # See the reports at https://codecov.io/gh/GITHUBORG/REPONAME
      - uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false
